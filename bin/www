#!usr/bin/env node
require('dotenv').config()


const app = require('../app')
const debug = require('debug')('todos:server') // todos:server is the out namespace which it means this debug instance we will set it to debug only for our app
const http = require('http')


// normalize the port
// this function is for safety (make sure that the provided port is a number)
const normalizePort = (val) => {
  const port = parseInt(val, 10) // 10 is the base

  // check if can be parsed into int
  if (isNaN(port))
    return val; // in this case the val cannot be parsed into int (is string) -> may be a named pipe or socket ...
  
  if (port >= 0)
    return port // can be parsed into int

  return false
}

// event listern for http server -- onError --
const onError = (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }
  
  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;
  
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
     throw error;
  }
}


const onListening = () => {
  const addr = server.address()
  const bind = typeof addr === 'string' ? 'pipe' + addr : 'port' + addr.port
  debug('Listening on ' + bind)
}



// sert the port
const port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

// create our server
const server = http.createServer(app)

// listen on provided port on all interfaces
server.listen(port)
server.on('error', onError)
server.on('listening', onListening)


